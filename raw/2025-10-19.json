[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1727584731", "name": "share", "avatar_normal": "https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1727584731", "title": "分享发现", "url": "https://www.v2ex.com/go/share", "topics": 44598, "footer": "", "header": "分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。", "title_alternative": "Share", "avatar_mini": "https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1727584731", "stars": 6157, "aliases": [], "root": false, "id": 16, "parent_node_name": "v2ex"}, "member": {"id": 487715, "username": "goodhellonice", "url": "https://www.v2ex.com/u/goodhellonice", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/a66b/6c3e/487715_mini.png?m=1725432489", "avatar_normal": "https://cdn.v2ex.com/avatar/a66b/6c3e/487715_normal.png?m=1725432489", "avatar_large": "https://cdn.v2ex.com/avatar/a66b/6c3e/487715_large.png?m=1725432489", "created": 1588595775, "last_modified": 1725432489, "pro": 0}, "last_reply_by": "wasd6267016", "last_touched": 1760845681, "title": "著名物理学家杨振宁逝世", "url": "https://www.v2ex.com/t/1166595", "created": 1760762525, "deleted": 0, "content": "https://mp.weixin.qq.com/s/hPMsBHp5cXlKSeQ6nzGKVw\r\n记者从清华大学获悉，享誉世界的物理学家、诺贝尔物理学奖获得者，中国科学院院士，清华大学教授、清华大学高等研究院名誉院长杨振宁先生，因病于 2025 年 10 月 18 日在北京逝世，享年 103 岁。", "content_rendered": "<p><a href=\"https://mp.weixin.qq.com/s/hPMsBHp5cXlKSeQ6nzGKVw\" rel=\"nofollow\">https://mp.weixin.qq.com/s/hPMsBHp5cXlKSeQ6nzGKVw</a>\n记者从清华大学获悉，享誉世界的物理学家、诺贝尔物理学奖获得者，中国科学院院士，清华大学教授、清华大学高等研究院名誉院长杨振宁先生，因病于 2025 年 10 月 18 日在北京逝世，享年 103 岁。</p>\n", "last_modified": 1760762525, "replies": 73, "id": 1166595}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_large.png?m=1754172750", "name": "android", "avatar_normal": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_normal.png?m=1754172750", "title": "Android", "url": "https://www.v2ex.com/go/android", "topics": 12578, "footer": "", "header": "来自 <a href=\"/go/google\">Google</a> 的开放源代码智能手机平台。", "title_alternative": "Android", "avatar_mini": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_mini.png?m=1754172750", "stars": 6122, "aliases": [], "root": false, "id": 39, "parent_node_name": "hardware"}, "member": {"id": 518287, "username": "NokiaForever", "url": "https://www.v2ex.com/u/NokiaForever", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/8f503afe6496e63e4809507a28912315?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/8f503afe6496e63e4809507a28912315?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/8f503afe6496e63e4809507a28912315?s=73&d=retro", "created": 1605772426, "last_modified": 1680853594, "pro": 0}, "last_reply_by": "szzonly", "last_touched": 1760831575, "title": "三星生态优缺点", "url": "https://www.v2ex.com/t/1166598", "created": 1760764077, "deleted": 0, "content": "三星优点：\r\n1. 出色的外观设计，一流的质感\r\n2. 系统和 Windows 联动十分方便，有全功能的 Link to Windows ，如果是 Galaxy Book （伪装亦可），还可以使用多重控制一套键鼠控制电脑手机平板，还有 Quick Share 互传文件，相册集成 onedrive ，手机上传到云端的照片，平板相册也能看到，Windows 相册也可以。Windows 上也有 Galaxy Buds 客户端，对三星蓝牙耳机进行控制。\r\n3. 优先享受到 Google 的新功能，\r\nCircle to Search 尤其是他的全屏翻译功能真的很好用，别人发来的图片上面有日文韩文也都能翻译，还有长按电源键呼出 Gemini ，有问题直接问 Gemini ，三星手表现在也能长按电源键呼出 Gemini 。\r\n4. 系统逻辑接近原生(比如设置列表，APP 的系统设置页面逻辑)没有像中国大陆系统一样魔改，自己搞一套小组件，砍原生特性，很干净(非中国大陆版)，系统安装器也是原版，讨厌国产国行魔改安装器。\r\n5. 任何 APP 都能分屏，小窗，配合侧屏幕面板打开很方便。\r\n6. 侧屏幕面板剪贴板列表很方便\r\n7. 和三星平板同步剪贴板，耳机无缝切换，还有三星笔记自动同步，联动舒服。\r\n8. ai 功能包括相册修图，音频去噪音，同传翻译等，很好用。\r\n三星缺点\r\n\r\n1. 续航十分差，容易发热。\r\n2. 除了支持谷歌 fcm 推送的应用，其他不支持 fcm 的中国大陆应用推送几乎没有。\r\n3. 三星钱包锁区，国际版无法添加中国大陆的公交卡，银行卡。", "content_rendered": "三星优点：<br />1. 出色的外观设计，一流的质感<br />2. 系统和 Windows 联动十分方便，有全功能的 Link to Windows ，如果是 Galaxy Book （伪装亦可），还可以使用多重控制一套键鼠控制电脑手机平板，还有 Quick Share 互传文件，相册集成 onedrive ，手机上传到云端的照片，平板相册也能看到，Windows 相册也可以。Windows 上也有 Galaxy Buds 客户端，对三星蓝牙耳机进行控制。<br />3. 优先享受到 Google 的新功能，<br />Circle to Search 尤其是他的全屏翻译功能真的很好用，别人发来的图片上面有日文韩文也都能翻译，还有长按电源键呼出 Gemini ，有问题直接问 Gemini ，三星手表现在也能长按电源键呼出 Gemini 。<br />4. 系统逻辑接近原生(比如设置列表，APP 的系统设置页面逻辑)没有像中国大陆系统一样魔改，自己搞一套小组件，砍原生特性，很干净(非中国大陆版)，系统安装器也是原版，讨厌国产国行魔改安装器。<br />5. 任何 APP 都能分屏，小窗，配合侧屏幕面板打开很方便。<br />6. 侧屏幕面板剪贴板列表很方便<br />7. 和三星平板同步剪贴板，耳机无缝切换，还有三星笔记自动同步，联动舒服。<br />8. ai 功能包括相册修图，音频去噪音，同传翻译等，很好用。<br />三星缺点<br /><br />1. 续航十分差，容易发热。<br />2. 除了支持谷歌 fcm 推送的应用，其他不支持 fcm 的中国大陆应用推送几乎没有。<br />3. 三星钱包锁区，国际版无法添加中国大陆的公交卡，银行卡。", "last_modified": 1760764077, "replies": 46, "id": 1166598}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913", "name": "apple", "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913", "title": "Apple", "url": "https://www.v2ex.com/go/apple", "topics": 29666, "footer": "", "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。", "title_alternative": "Apple", "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913", "stars": 3240, "aliases": [], "root": false, "id": 184, "parent_node_name": "hardware"}, "member": {"id": 647743, "username": "GeekGuru", "url": "https://www.v2ex.com/u/GeekGuru", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/32ad/39d1/647743_mini.png?m=1719759557", "avatar_normal": "https://cdn.v2ex.com/avatar/32ad/39d1/647743_normal.png?m=1719759557", "avatar_large": "https://cdn.v2ex.com/avatar/32ad/39d1/647743_large.png?m=1719759557", "avatar_xlarge": "https://cdn.v2ex.com/avatar/32ad/39d1/647743_xlarge.png?m=1719759557", "created": 1694241478, "last_modified": 1719759557, "pro": 0}, "last_reply_by": "sanshao124", "last_touched": 1760828867, "title": "iPhone 17 杀后台太严重了，还是买 iPhone 17 Pro 吧", "url": "https://www.v2ex.com/t/1166610", "created": 1760767477, "deleted": 0, "content": "iPhone 手机，只有内存才是最关键的参数指标", "content_rendered": "<p>iPhone 手机，只有内存才是最关键的参数指标</p>\n", "last_modified": 1760767477, "replies": 39, "id": 1166610}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/9c3b/1830/1113_large.png?m=1754972035", "name": "crypto", "avatar_normal": "https://cdn.v2ex.com/navatar/9c3b/1830/1113_normal.png?m=1754972035", "title": "加密货币", "url": "https://www.v2ex.com/go/crypto", "topics": 476, "footer": "", "header": "", "title_alternative": "Crypto", "avatar_mini": "https://cdn.v2ex.com/navatar/9c3b/1830/1113_mini.png?m=1754972035", "stars": 1044, "aliases": [], "root": false, "id": 1113, "parent_node_name": "money"}, "member": {"id": 653717, "username": "tthem", "url": "https://www.v2ex.com/u/tthem", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/5d3d/fcee/653717_mini.png?m=1760087793", "avatar_normal": "https://cdn.v2ex.com/avatar/5d3d/fcee/653717_normal.png?m=1760087793", "avatar_large": "https://cdn.v2ex.com/avatar/5d3d/fcee/653717_large.png?m=1760087793", "avatar_xlarge": "https://cdn.v2ex.com/avatar/5d3d/fcee/653717_xlarge.png?m=1760087793", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/5d3d/fcee/653717_xxlarge.png?m=1760087793", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/5d3d/fcee/653717_xxxlarge.png?m=1760087793", "created": 1696751745, "last_modified": 1760087793, "pro": 0}, "last_reply_by": "lifeintools", "last_touched": 1760816408, "title": "炒币日记 1018 - 抄底川普币！", "url": "https://www.v2ex.com/t/1166631", "created": 1760775861, "deleted": 0, "content": "昨天下午看到有 v 友在帖子回复里聊到川普币，研究了一下。\r\n川普币从最高 $80 一个跌到了只有$5, 跌去了将近 95% 。\r\n作为 meme 代币的龙头（和 doge 相对，差不多是龙头吧），我觉得归零的概率不大，目前这个点位是有投资价值的，抄底问题不大。\r\n除了每个月会解锁一部分锁仓的代币以外，其他的风险就在于特朗普本人的操作了，小仓位入 20 倍全仓做多了。不设置止盈，看向$10 。", "content_rendered": "<p>昨天下午看到有 v 友在帖子回复里聊到川普币，研究了一下。\n川普币从最高 $80 一个跌到了只有$5, 跌去了将近 95% 。\n作为 meme 代币的龙头（和 doge 相对，差不多是龙头吧），我觉得归零的概率不大，目前这个点位是有投资价值的，抄底问题不大。\n除了每个月会解锁一部分锁仓的代币以外，其他的风险就在于特朗普本人的操作了，小仓位入 20 倍全仓做多了。不设置止盈，看向$10 。</p>\n", "last_modified": 1760775861, "replies": 29, "id": 1166631}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1695370146", "name": "career", "avatar_normal": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1695370146", "title": "职场话题", "url": "https://www.v2ex.com/go/career", "topics": 21397, "footer": "", "header": "这里，我们聊聊那些工作中遇到的开心和不开心的事。", "title_alternative": "Career", "avatar_mini": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1695370146", "stars": 3521, "aliases": [], "root": false, "id": 770, "parent_node_name": "work"}, "member": {"id": 233897, "username": "NowTime", "url": "https://www.v2ex.com/u/NowTime", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/7522/6912/233897_mini.png?m=1756284669", "avatar_normal": "https://cdn.v2ex.com/avatar/7522/6912/233897_normal.png?m=1756284669", "avatar_large": "https://cdn.v2ex.com/avatar/7522/6912/233897_large.png?m=1756284669", "avatar_xlarge": "https://cdn.v2ex.com/avatar/7522/6912/233897_xlarge.png?m=1756284669", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/7522/6912/233897_xxlarge.png?m=1756284669", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/7522/6912/233897_xxxlarge.png?m=1756284669", "created": 1496591110, "last_modified": 1756284669, "pro": 0}, "last_reply_by": "chashao", "last_touched": 1760827158, "title": "公司给研发从 i5 台式机换到 Mac mini 但内存配置让我有点无语 / 你们配的是什么电脑？", "url": "https://www.v2ex.com/t/1166639", "created": 1760778574, "deleted": 0, "content": "我司早期给研发配的是 Windows 台式机：CPU （是几年前入职时的那一代）、16GB 内存、512GB SSD 。\r\n算是能用，但多开几个项目或者跑 Docker 就开始喘。好在内存可以申请升级，我升到 24GB 后才算稳定一点。\r\n\r\n后来陆续看到领导、产品等都换成了 MacBook （具体配置不详）。\r\n\r\n过了很久一段时间，我们这些底层🐮🐎研发也终于轮到更新设备 —— **Mac mini M4 16GB 内存**。\r\n\r\n结果实际体验：\r\n日常使用没问题，但多开几个 IDE 、再跑 Docker 和十几个标签页后，\r\n系统就开始有点吃紧，响应明显变慢，偶尔会操作卡顿（不确定是否为系统 BUG ）。\r\n一看监控，Swap 已经跑到 11GB+ 😅\r\n\r\n更离谱的是，客服那边配的是 **MacBook Air M3 16GB 内存**，比我们这台 Mac mini 至少贵两千多。\r\n\r\n明明同一批更新，为什么不给研发多点内存预算呢 🤷\r\n\r\n---\r\n\r\n💬 想问问大家：\r\n* 你们公司给程序员/研发配的是什么样的电脑？\r\n* 是“能跑就行”型，还是“真把研发当生产力”那种？", "content_rendered": "<p>我司早期给研发配的是 Windows 台式机：CPU （是几年前入职时的那一代）、16GB 内存、512GB SSD 。\n算是能用，但多开几个项目或者跑 Docker 就开始喘。好在内存可以申请升级，我升到 24GB 后才算稳定一点。</p>\n<p>后来陆续看到领导、产品等都换成了 MacBook （具体配置不详）。</p>\n<p>过了很久一段时间，我们这些底层🐮🐎研发也终于轮到更新设备 —— <strong>Mac mini M4 16GB 内存</strong>。</p>\n<p>结果实际体验：\n日常使用没问题，但多开几个 IDE 、再跑 Docker 和十几个标签页后，\n系统就开始有点吃紧，响应明显变慢，偶尔会操作卡顿（不确定是否为系统 BUG ）。\n一看监控，Swap 已经跑到 11GB+ 😅</p>\n<p>更离谱的是，客服那边配的是 <strong>MacBook Air M3 16GB 内存</strong>，比我们这台 Mac mini 至少贵两千多。</p>\n<p>明明同一批更新，为什么不给研发多点内存预算呢 🤷</p>\n<hr/>\n<p>💬 想问问大家：</p>\n<ul>\n<li>你们公司给程序员/研发配的是什么样的电脑？</li>\n<li>是“能跑就行”型，还是“真把研发当生产力”那种？</li>\n</ul>\n", "last_modified": 1760778600, "replies": 26, "id": 1166639}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1727584731", "name": "share", "avatar_normal": "https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1727584731", "title": "分享发现", "url": "https://www.v2ex.com/go/share", "topics": 44598, "footer": "", "header": "分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。", "title_alternative": "Share", "avatar_mini": "https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1727584731", "stars": 6157, "aliases": [], "root": false, "id": 16, "parent_node_name": "v2ex"}, "member": {"id": 463491, "username": "movq", "url": "https://www.v2ex.com/u/movq", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/046c/e28c/463491_mini.png?m=1683787993", "avatar_normal": "https://cdn.v2ex.com/avatar/046c/e28c/463491_normal.png?m=1683787993", "avatar_large": "https://cdn.v2ex.com/avatar/046c/e28c/463491_large.png?m=1683787993", "avatar_xlarge": "https://cdn.v2ex.com/avatar/046c/e28c/463491_xlarge.png?m=1683787993", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/046c/e28c/463491_xxlarge.png?m=1683787993", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/046c/e28c/463491_xxxlarge.png?m=1683787993", "created": 1578307830, "last_modified": 1683787993, "pro": 0}, "last_reply_by": "ouqihang", "last_touched": 1760816640, "title": "忘了今年是 5G 出来的第几年了，用 5G 的时间应该加起来不到一个月", "url": "https://www.v2ex.com/t/1166653", "created": 1760785590, "deleted": 0, "content": "双持安卓苹果，都支持 5G ，但是一打开之后耗电明显增加，安卓大电池都耗不住。\r\n\r\n有人说这是因为太偏僻了，基站少，但是我坐标上海内环，上班的时候安卓开 5G 可以正常上网，苹果开 5G 之后就时不时不能上网，索性直接把安卓和苹果的 5G 全都关了\r\n\r\n那么把 5G 关掉之后有什么体验下降呢？完全没有，反而耗电量减少，信号稳定，纯纯体验提升了一个档次", "content_rendered": "<p>双持安卓苹果，都支持 5G ，但是一打开之后耗电明显增加，安卓大电池都耗不住。</p>\n<p>有人说这是因为太偏僻了，基站少，但是我坐标上海内环，上班的时候安卓开 5G 可以正常上网，苹果开 5G 之后就时不时不能上网，索性直接把安卓和苹果的 5G 全都关了</p>\n<p>那么把 5G 关掉之后有什么体验下降呢？完全没有，反而耗电量减少，信号稳定，纯纯体验提升了一个档次</p>\n", "last_modified": 1760785747, "replies": 25, "id": 1166653}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/2421/fcb1/436_large.png?m=1650095204", "name": "nodejs", "avatar_normal": "https://cdn.v2ex.com/navatar/2421/fcb1/436_normal.png?m=1650095204", "title": "Node.js", "url": "https://www.v2ex.com/go/nodejs", "topics": 2589, "footer": "", "header": "Node.js is a platform built on <a href=\"http://code.google.com/p/v8/\" target=\"_blank\">Chrome's JavaScript runtime</a> for easily building fast, scalable network applications.", "title_alternative": "Node.js", "avatar_mini": "https://cdn.v2ex.com/navatar/2421/fcb1/436_mini.png?m=1650095204", "stars": 2933, "aliases": [], "root": false, "id": 436, "parent_node_name": "js"}, "member": {"id": 266237, "username": "BeautifulSoap", "url": "https://www.v2ex.com/u/BeautifulSoap", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/1e0f/48e8/266237_mini.png?m=1760788101", "avatar_normal": "https://cdn.v2ex.com/avatar/1e0f/48e8/266237_normal.png?m=1760788101", "avatar_large": "https://cdn.v2ex.com/avatar/1e0f/48e8/266237_large.png?m=1760788101", "avatar_xlarge": "https://cdn.v2ex.com/avatar/1e0f/48e8/266237_xlarge.png?m=1760788101", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/1e0f/48e8/266237_xxlarge.png?m=1760788101", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/1e0f/48e8/266237_xxxlarge.png?m=1760788101", "created": 1510298723, "last_modified": 1760788101, "pro": 0}, "last_reply_by": "shakaraka", "last_touched": 1760846884, "title": "2025 年 node 项目，乱成一锅粥的 typescript ESM import 写法该怎么选？", "url": "https://www.v2ex.com/t/1166656", "created": 1760788291, "deleted": 0, "content": "假设在 `./utils/calcute.ts` 中有一个工具函数 `add()` \r\n\r\n```\r\nexport function add(a: number, b: number): number {\r\n  return a + b;\r\n}\r\n```\r\n\r\n然后我们在 main.ts 中需要使用这个 add 函数\r\n\r\n# 写法 1, import 不带扩展名：\r\n\r\ntsconfig 配置 module=esnext ，然后假设有如下 `main.ts` 文件\r\n\r\n```ts\r\nimport { add } from \"./utils/calcute\";\r\n\r\nadd(1,2)\r\n```\r\n\r\n使用 tsc 编译后使用 node 运行编译后的 js 文件会报错\r\n\r\n```\r\n\r\nnode ./dist/main.js\r\n\r\n... 省略\r\n\r\n  code: 'ERR_UNSUPPORTED_DIR_IMPORT',\r\n  url: 'file:///home/xxxxxx/dist/utils/calcute'\r\n \r\n```\r\n\r\n\r\n原因是现在的 node 处理 esm 的 import 需要指定具体文件名（即类似 `import ./utils/calcute.js` ）。不写扩展名的 import 会报错\r\n\r\n而 typescript 编译代码对 import 内 `from \"xxxx\"` 的部分是不会做任何处理直接保留的。按照 ts 官方的意思就是这部分是模块解析，不应该是 typescript 的工作而应交给 js 运行时（如 node 、浏览器）自己处理，所以 tsc 编译 ts 文件是会完整保留这部分不做任何变动的\r\n\r\n\r\n基于这种方针，于是就有了两种解法\r\n\r\n1. 放弃 tsc 编译使用 bundle\r\n2. 下面的写法 2\r\n\r\n# 写法 2：import .js\r\n\r\ntsconfig 配置 module=nodenext 和 moduleResolution=nodenext ，然后 `main.ts` 内容如下\r\n\r\n```ts\r\nimport { add } from \"./utils/calcute.js\"; // 需要添加 .js 扩展名\r\n\r\nadd(1,2)\r\n```\r\n\r\n\r\n说真的，当年我接触到这种写法的时候是大受震撼的。 在 ts 文件中写 import .js 实在过于丑陋了。我不解、我不适应、我无法接受\r\n\r\n但这样的代码经过 tsc 编译后就能正常被 node 执行了，我也只能捏着鼻子用了\r\n\r\n本来以为 esm 的问题也就这样了，但没想到到了 2025 年就乱套了\r\n\r\n# 写法 3: import .ts\r\n\r\n因为 bun, deno 的竞争，不思进取的 node 终于开始迭代起功能了。甚至还破天荒地添加了直接执行 typescript 代码的功能（运行的时候直接丢弃类型信息把 ts 当 js 跑）\r\n\r\n这个功能现在在在新 node 中已经默认开启可用了，并且 typescript 也为了这个功能添加多个更新。所以可以预见今后用 node 直接执行 ts 会多起来\r\n\r\n然后，这个功能在 esm 上就不出意外得出意外了。还是上面的代码 `main.ts` 内容如下：\r\n\r\n```ts\r\nimport { add } from \"./utils/calcute.js\"; // 需要添加 .js 扩展名\r\n\r\nadd(1,2)\r\n```\r\n\r\n使用 `node main.ts` 执行后直接报错\r\n\r\n```\r\n\r\nnode main.ts\r\n\r\n... 省略\r\n\r\n  code: 'ERR_MODULE_NOT_FOUND',\r\n  url: 'file:///home/xxxxxxxx/utils/calcute.js'\r\n\r\n```\r\n\r\n嗯，因为模块的代码位于文件 `utils/calcute.ts` 中，而 import 语句中写的是 `./utils/calcute.js`，所以 node 理所当然的找不到对应的模块文件报错了\r\n\r\n所以为了解决这个问题，tsconfig 后来添加了一个选项 allowImportingTsExtensions ，开启后在 `main.ts` 中需要将 import 改写成 import .ts 的形式\r\n\r\n```ts\r\nimport { add } from \"./utils/calcute.ts\"; // 需要 import .ts ，而不是.js\r\n\r\nadd(1,2)\r\n```\r\n\r\n嗯，当年 typescript 的回旋镖就这么砸了回来，现在我们又必须在 ts 文件中写 import .ts 了。并且为了兼容这种写法 typesript 现在还不得不添加新的编译选项 `allowImportingTsExtensions` 来允许在 ts 文件中 import .ts\r\n\r\n但是，这有个问题，启用这个选项必须也启用 noEmit ，也就是说在 typescript 官方那的说法是：我们没有被打脸啊，我们依旧不处理 import 的内容，你想 import .ts 可以，但是你这样写了的话就别用我们的 tsc 来把这种代码编译成 js 了\r\n\r\n但问题是实际上开发中，使用 node 直接执行 ts 文件测试，然后在生产环境中使用 tsc 或其他工具编译成 js 运行会很常见\r\n\r\n于是如果你想直接 node 执行 ts 代码，那就得放弃将使用 tsc 将代码编译为 js\r\n\r\n\r\n# 所以大家怎么选\r\n\r\n目前这 esm import 写法已经乱成这样了，大家平时会怎么选？", "content_rendered": "<p>假设在 <code>./utils/calcute.ts</code> 中有一个工具函数 <code>add()</code> </p>\n<pre><code>export function add(a: number, b: number): number {\n  return a + b;\n}\n</code></pre>\n<p>然后我们在 main.ts 中需要使用这个 add 函数</p>\n<h1>写法 1, import 不带扩展名：</h1>\n<p>tsconfig 配置 module=esnext ，然后假设有如下 <code>main.ts</code> 文件</p>\n<pre><code class=\"language-ts\">import { add } from \"./utils/calcute\";\n\nadd(1,2)\n</code></pre>\n<p>使用 tsc 编译后使用 node 运行编译后的 js 文件会报错</p>\n<pre><code>\nnode ./dist/main.js\n\n... 省略\n\n  code: 'ERR_UNSUPPORTED_DIR_IMPORT',\n  url: 'file:///home/xxxxxx/dist/utils/calcute'\n \n</code></pre>\n<p>原因是现在的 node 处理 esm 的 import 需要指定具体文件名（即类似 <code>import ./utils/calcute.js</code> ）。不写扩展名的 import 会报错</p>\n<p>而 typescript 编译代码对 import 内 <code>from \"xxxx\"</code> 的部分是不会做任何处理直接保留的。按照 ts 官方的意思就是这部分是模块解析，不应该是 typescript 的工作而应交给 js 运行时（如 node 、浏览器）自己处理，所以 tsc 编译 ts 文件是会完整保留这部分不做任何变动的</p>\n<p>基于这种方针，于是就有了两种解法</p>\n<ol>\n<li>放弃 tsc 编译使用 bundle</li>\n<li>下面的写法 2</li>\n</ol>\n<h1>写法 2：import .js</h1>\n<p>tsconfig 配置 module=nodenext 和 moduleResolution=nodenext ，然后 <code>main.ts</code> 内容如下</p>\n<pre><code class=\"language-ts\">import { add } from \"./utils/calcute.js\"; // 需要添加 .js 扩展名\n\nadd(1,2)\n</code></pre>\n<p>说真的，当年我接触到这种写法的时候是大受震撼的。 在 ts 文件中写 import .js 实在过于丑陋了。我不解、我不适应、我无法接受</p>\n<p>但这样的代码经过 tsc 编译后就能正常被 node 执行了，我也只能捏着鼻子用了</p>\n<p>本来以为 esm 的问题也就这样了，但没想到到了 2025 年就乱套了</p>\n<h1>写法 3: import .ts</h1>\n<p>因为 bun, deno 的竞争，不思进取的 node 终于开始迭代起功能了。甚至还破天荒地添加了直接执行 typescript 代码的功能（运行的时候直接丢弃类型信息把 ts 当 js 跑）</p>\n<p>这个功能现在在在新 node 中已经默认开启可用了，并且 typescript 也为了这个功能添加多个更新。所以可以预见今后用 node 直接执行 ts 会多起来</p>\n<p>然后，这个功能在 esm 上就不出意外得出意外了。还是上面的代码 <code>main.ts</code> 内容如下：</p>\n<pre><code class=\"language-ts\">import { add } from \"./utils/calcute.js\"; // 需要添加 .js 扩展名\n\nadd(1,2)\n</code></pre>\n<p>使用 <code>node main.ts</code> 执行后直接报错</p>\n<pre><code>\nnode main.ts\n\n... 省略\n\n  code: 'ERR_MODULE_NOT_FOUND',\n  url: 'file:///home/xxxxxxxx/utils/calcute.js'\n\n</code></pre>\n<p>嗯，因为模块的代码位于文件 <code>utils/calcute.ts</code> 中，而 import 语句中写的是 <code>./utils/calcute.js</code>，所以 node 理所当然的找不到对应的模块文件报错了</p>\n<p>所以为了解决这个问题，tsconfig 后来添加了一个选项 allowImportingTsExtensions ，开启后在 <code>main.ts</code> 中需要将 import 改写成 import .ts 的形式</p>\n<pre><code class=\"language-ts\">import { add } from \"./utils/calcute.ts\"; // 需要 import .ts ，而不是.js\n\nadd(1,2)\n</code></pre>\n<p>嗯，当年 typescript 的回旋镖就这么砸了回来，现在我们又必须在 ts 文件中写 import .ts 了。并且为了兼容这种写法 typesript 现在还不得不添加新的编译选项 <code>allowImportingTsExtensions</code> 来允许在 ts 文件中 import .ts</p>\n<p>但是，这有个问题，启用这个选项必须也启用 noEmit ，也就是说在 typescript 官方那的说法是：我们没有被打脸啊，我们依旧不处理 import 的内容，你想 import .ts 可以，但是你这样写了的话就别用我们的 tsc 来把这种代码编译成 js 了</p>\n<p>但问题是实际上开发中，使用 node 直接执行 ts 文件测试，然后在生产环境中使用 tsc 或其他工具编译成 js 运行会很常见</p>\n<p>于是如果你想直接 node 执行 ts 代码，那就得放弃将使用 tsc 将代码编译为 js</p>\n<h1>所以大家怎么选</h1>\n<p>目前这 esm import 写法已经乱成这样了，大家平时会怎么选？</p>\n", "last_modified": 1760835707, "replies": 25, "id": 1166656}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1747623425", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1747623425", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 9027, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1747623425", "stars": 2007, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 369680, "username": "cXfZqwwP", "url": "https://www.v2ex.com/u/cXfZqwwP", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/fbb8923328b1216b98094e640fff09d5?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/fbb8923328b1216b98094e640fff09d5?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/fbb8923328b1216b98094e640fff09d5?s=73&d=retro", "created": 1544521263, "last_modified": 1544521263, "pro": 0}, "last_reply_by": "YEZHI", "last_touched": 1760847199, "title": "祝自己生日快乐", "url": "https://www.v2ex.com/t/1166702", "created": 1760833220, "deleted": 0, "content": "29 了时间过的好快", "content_rendered": "<p>29 了时间过的好快</p>\n", "last_modified": 1760839742, "replies": 24, "id": 1166702}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1733731195", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1733731195", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 68359, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1733731195", "stars": 9431, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 642358, "username": "infyni", "url": "https://www.v2ex.com/u/infyni", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/ab680cdf75f758f970bab3563a61625e?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/ab680cdf75f758f970bab3563a61625e?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/ab680cdf75f758f970bab3563a61625e?s=73&d=retro", "created": 1691509816, "last_modified": 1691509816, "pro": 0}, "last_reply_by": "zzutmebwd", "last_touched": 1760838884, "title": "AI Coding 其实也挺累的", "url": "https://www.v2ex.com/t/1166628", "created": 1760774787, "deleted": 0, "content": "一直在尝试用 ai 帮我写一个中型的 web 应用，结合 phaser 的游戏模式。\r\n\r\n到目前为止，所有功能其实都实现了，并且我一行代码没写，但是过程说真的挺累的。\r\n\r\n简单说一下功能：\r\n1 、我操作的玩家跟其它游戏角色碰撞之后有一个逻辑操作，打个比方，调用函数 Aaction （）；\r\n2 、我用鼠标点击其它游戏角色之后，会有一个逻辑,Baction （）。\r\n\r\n之前 1 和 2 的操作是不一样的逻辑， 今天我叫 ai (claude code sonnet 4.5) 帮我调整一下， 把 2 的后续逻辑调整 Baction （）跟 1 完全一样 Aaction （）。\r\n\r\n结果它来来回回调整了一两个小时还弄不对，并且把我的 1 的功能给改没了。\r\n\r\n\r\n这个项目是我尝试用产品经理的视角做的一个实验品，我不打算自己介入去看代码，所以耗了很多时间去跟它 PK 。\r\n\r\n\r\n从我的角度来看：\r\n在 1 的碰撞之后，调用的那个函数，直接给到 2 的点击事件应该可以了，我自己去改了代码也确实是如此。不明白为什么它就做不到～～～", "content_rendered": "<p>一直在尝试用 ai 帮我写一个中型的 web 应用，结合 phaser 的游戏模式。</p>\n<p>到目前为止，所有功能其实都实现了，并且我一行代码没写，但是过程说真的挺累的。</p>\n<p>简单说一下功能：\n1 、我操作的玩家跟其它游戏角色碰撞之后有一个逻辑操作，打个比方，调用函数 Aaction （）；\n2 、我用鼠标点击其它游戏角色之后，会有一个逻辑,Baction （）。</p>\n<p>之前 1 和 2 的操作是不一样的逻辑， 今天我叫 ai (claude code sonnet 4.5) 帮我调整一下， 把 2 的后续逻辑调整 Baction （）跟 1 完全一样 Aaction （）。</p>\n<p>结果它来来回回调整了一两个小时还弄不对，并且把我的 1 的功能给改没了。</p>\n<p>这个项目是我尝试用产品经理的视角做的一个实验品，我不打算自己介入去看代码，所以耗了很多时间去跟它 PK 。</p>\n<p>从我的角度来看：\n在 1 的碰撞之后，调用的那个函数，直接给到 2 的点击事件应该可以了，我自己去改了代码也确实是如此。不明白为什么它就做不到～～～</p>\n", "last_modified": 1760774787, "replies": 22, "id": 1166628}]